import java.util.LinkedList;
import java.util.Queue;
import java.util.Random;
import java.util.Stack;

public class FilaPilha {

    public static void main(String[] args) {
        Queue<Integer> fila = sortearNumeros();
        processarFila(fila);
    }

    private static Queue<Integer> sortearNumeros() {
        Queue<Integer> fila = new LinkedList<>();
        Random rand = new Random();

        // Gera 1000 números positivos e 1000 números negativos
        for (int i = 0; i < 1000; i++) {
            fila.add(rand.nextInt(10000) + 1);  
        }

        for (int i = 0; i < 1000; i++) {
            fila.add(-rand.nextInt(10000) - 1); 
        }

        return fila;
    }

    private static void processarFila(Queue<Integer> fila) {
        Stack<Integer> pilha = new Stack<>();

        while (!fila.isEmpty()) {
            int numero = fila.peek();

            if (numero > 0) {
                // tira número positivo da fila 
                pilha.push(fila.poll());
            } else {
                // tira número negativo da fila 
                fila.poll();
                if (!pilha.isEmpty()) {
                    System.out.println("Número no topo da pilha: " + pilha.pop());
                }
            }
        }
    }
}
